<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.library.libraryproject.dao.OrderDao">
    <!--auto generated Code-->
    <resultMap id="BaseResultMap" type="com.library.libraryproject.entity.Order">
        <result column="order_id" property="orderId" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="order_status" property="orderStatus" jdbcType="VARCHAR"/>
        <result column="order_start" property="orderStart" jdbcType="TIMESTAMP"/>
        <result column="order_finish" property="orderFinish" jdbcType="TIMESTAMP"/>
        <result column="order_create" property="orderCreate" jdbcType="TIMESTAMP"/>
        <result column="deleted" property="deleted" jdbcType="INTEGER"/>
        <result column="seat_id" property="seatId" jdbcType="VARCHAR"/>
    </resultMap>

    <!--auto generated Code-->
    <sql id="Base_Column_List">
        order_id,
        user_id,
        order_status,
        order_start,
        order_finish,
        order_create,
        deleted,
seat_id
</sql>

    <!--auto generated Code-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="order.orderId">
        INSERT INTO order_log (
            order_id,
            user_id,
            seat_id,
            order_status,
            order_start,
           order_finish,
           order_create,
           deleted
        ) VALUES (
            #{order.orderId,jdbcType=INTEGER},
            #{order.userId,jdbcType=INTEGER},
            #{order.seatId,jdbcType=VARCHAR},
            #{order.orderStatus,jdbcType=VARCHAR},
            #{order.orderStart,jdbcType=TIMESTAMP},
            #{order.orderFinish,jdbcType=TIMESTAMP},
            #{order.orderCreate,jdbcType=TIMESTAMP},
            #{order.deleted,jdbcType=INTEGER}
        )
</insert>

    <update id="deleteOrder">
        UPDATE order_log
        <set>
            <if test="param.deleted != null"> deleted = #{param.deleted,jdbcType=INTEGER},</if>
             order_finish = #{param.mdfDate,jdbcType=TIMESTAMP}
        </set>
		WHERE order_id in
                (<foreach collection="param.orderIds" item="orderId" index="index" separator=",">
                    #{orderId,jdbcType=INTEGER}
                </foreach>)
    </update>

    <!--auto generated by codehelper on 2019-01-03 23:42:42-->
	<select id="findBySeatId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_log
        where deleted=0
            and seat_id=#{seatId,jdbcType=VARCHAR}
    </select>

<!--auto generated by codehelper on 2019-01-17-->
	<select id="findByUserId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_log
        where deleted=0
            and user_id=#{userId,jdbcType=INTEGER}
    </select>

    <select id="findBySeatIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_log
        where deleted = 0
        and seat_id in
            (<foreach collection="seatIds" item="seatId" index="index" separator=",">
                #{seatId,jdbcType=VARCHAR}
             </foreach>)
    </select>

    <select id="findByDeleted" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_log
        where deleted = #{deleted,jdbcType=INTEGER}
    </select>

    <update id="deleteByOrderIds">
        update order_log
        <set>
            deleted = 1
        </set>
        where order_id in
            (<foreach collection="orderIds" item="orderId" index="index" separator=",">
              #{orderId,jdbcType=INTEGER}
            </foreach>)
    </update>

    <select id="getUserOrderHistory" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_log
        where user_id = #{userId,jdbcType=INTEGER}
    </select>

</mapper>

